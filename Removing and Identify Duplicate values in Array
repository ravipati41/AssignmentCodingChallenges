package assignment;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;

public class DupliArr {

	public static void main(String[] args) {
		int[] numbers = { 5, 1, 23, 2, 1, 6, 3, 1, 8, 12, 3, 5, 6, 6 };
		Arrays.sort(numbers);
		// create two array list objects. one for duplicate values another for actual
		// values
		ArrayList<Integer> ar = new ArrayList<Integer>();
		ArrayList<Integer> ar1 = new ArrayList<Integer>();

		// create set object for adding values to set. set is not allowed for duplicate
		// values.
		HashSet<Integer> hs = new HashSet<Integer>();

		for (int a : numbers) {
			// identify the duplicate values and print them
			if (!hs.add(a)) {

				ar.add(a);

			}
			// After removing duplicate values and print the actual list
			else {
				ar1.add(a);
			}
		}
		System.out.println("the duplicate values are: " + ar);
		System.out.println("After Removing the duplicate values: " + ar1);

		// (or) Removing Duplicates

		for (int i = 0; i < numbers.length; i++) {
			hs.add(numbers[i]);
		}
		Iterator it = hs.iterator();
		while (it.hasNext()) {

			System.out.println(it.next() + "\t");
		}

		// (or) one more approach to removing duplicates.
		/*
		 * int[] input = { 1, 1, 3, 7, 7, 8, 9, 9, 10, 2, 9, 10 }; Arrays.sort(input);
		 * int current = input[0]; Boolean found = false; for (int i = 0; i <
		 * input.length; i++) {
		 * 
		 * if (current == input[i] && !found) {
		 * 
		 * current = input[i]; found = true;
		 * 
		 * }
		 * 
		 * else if (current != input[i]) { System.out.println(current); current =
		 * input[i]; found = false; } } System.out.println(current);
		 */
	}
}
